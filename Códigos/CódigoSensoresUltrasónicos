import RPi.GPIO as GPIO
import time

# Desactivar las advertencias de GPIO
GPIO.setwarnings(False)

# Configuración de los pines GPIO
GPIO.setmode(GPIO.BCM)
GPIO_TRIGGER1 = 18
GPIO_ECHO1 = 24
GPIO_TRIGGER2 = 23
GPIO_ECHO2 = 25
#GPIO_TRIGGER3 = ??
#GPIO_ECHO3 = ??

GPIO.setup(GPIO_TRIGGER1, GPIO.OUT)
GPIO.setup(GPIO_ECHO1, GPIO.IN)
GPIO.setup(GPIO_TRIGGER2, GPIO.OUT)
GPIO.setup(GPIO_ECHO2, GPIO.IN)
#GPIO.setup(GPIO_TRIGGER3, GPIO.OUT)
#GPIO.setup(GPIO_ECHO3, GPIO.IN)

def distancia(trigger, echo):
    # Envía un pulso corto para activar el sensor
    GPIO.output(trigger, True)
    time.sleep(0.00001)
    GPIO.output(trigger, False)

    start_time = time.time()
    end_time = time.time()

    # Mide el tiempo de ida y vuelta del pulso ultrasónico
    while GPIO.input(echo) == 0:
        start_time = time.time()

    while GPIO.input(echo) == 1:
        end_time = time.time()

    # Calcula la distancia en base al tiempo medido
    tiempo_transcurrido = end_time - start_time
    distancia = (tiempo_transcurrido * 34300) / 2

    return distancia

try:
    while True:
        dist1 = distancia(GPIO_TRIGGER1, GPIO_ECHO1)
        dist2 = distancia(GPIO_TRIGGER2, GPIO_ECHO2)
        #dist3 = distancia(GPIO_TRIGGER3, GPIO_ECHO3)
        
        print("Distancia 1:", dist1, "cm")
        print("Distancia 2:", dist2, "cm")
        #print("Distancia 3:", dist3, "cm")
        time.sleep(1)

except KeyboardInterrupt:
    print("Programa interrumpido por el usuario")
    GPIO.cleanup()
